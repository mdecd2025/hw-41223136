var tipuesearch = {"pages": [{'title': 'About', 'text': '課程名稱: 協同產品設計實習 - Collaborative Product Design Practice \n 學員作業網站: https://mdecd2025.github.io/hw-41223136/ \n 學員作業倉儲: https://github.com/mdecd2025/hw-41223136 \xa0 \n \n 課程代號: cd2025 \n Teams 線上教學: \n 以 "學號@nfu.edu.tw" 登入 \xa0 https://login.microsoftonline.com/ \xa0 Office 365 \n Teams 團隊代碼:\xa0 p5z4eku \n \n 課程評分: \n Homework (30%) - 每週至少提交兩次與課程進度有關的內容, 完成後填回自評表單 \n Exam (40%) - 建立包含操作流程影片、心得以及提供檔案下載的網頁後填回自評表單 \n Final Report (30%) - 利用網頁內容進行簡報並提交 pdf 格式書面報告, 完成後填回自評表單 \n', 'tags': '', 'url': 'About.html'}, {'title': '上課內容', 'text': '', 'tags': '', 'url': '上課內容.html'}, {'title': 'w1', 'text': '利用python版本更新影片：. \n \n 匯出組員倉儲及網站影片： \n \n 列出組員的倉儲與網頁 \n # 從  Brython 程式庫中的 browser 導入 html, 可用來輸出超文件內容\n# 而所導入的 document 可以指向網頁中的特定 id 內容\nfrom browser import html, document\n# 建立 url 變數與網站中 2a 學員的學號與帳號資料 URL 網誌字串對應\nurl = "https://mde.tw/list/2a.txt"\n# 利用 open() 物件中的 readlines() 方法, 取出網站中的資料並逐行放入數列中, 因此 data 的資料型別為數列\ndata = open(url).readlines()\n# 進行資料查驗時, 印出 data 數列內容\n#print(data)\n# 因為學員資料中的第一列為標題, 因此有效資料從索引值 1 開始\nall_stud = data[1:]\n# 利用 len() 函式查驗 all_stud 數列有幾筆資料, 因為要與前後的字串併接, 因此利用 str() 將整數轉為字串\nprint("總共有 " + str(len(all_stud)) + "名學員")\n# \n# 利用 document[] 取得 id 為 "brython_div1" 的位置, 然後與 brython_div1 變數對應\nbrython_div1 = document["brython_div1"]\n# 利用 Brython 的 "<=" 特殊符號, 將右值帶有字串與超文件內容物件插入 brython_div1 變數所指定的位置\n# 其中利用 html.A 建立 anchor 標註物件, 第一個變數為 anchor 字串, 第二個變數則為 hyper text reference\nbrython_div1 <= "1. " + html.A("2a-ag4", href="https://mdecd2025.github.io/2a-ag4/")+ html.A("(repo)", href="https://github.com/mdecd2025/2a-ag4")\n# 利用 html.BR() 插入 break 標註\nbrython_div1 <= html.BR()\nbrython_div1 <= "2. " + html.A("41223118", href="https://mdecd2025.github.io/hw-zhe41223118/")+ html.A("(repo)", href="https://github.com/mdecd2025/hw-zhe41223118")\nbrython_div1 <= html.BR()\nbrython_div1 <= "3. " + html.A("41223122", href="https://mdecd2025.github.io/hw-41223122/")+ html.A("(repo)", href="https://github.com/mdecd2025/hw-41223122")\nbrython_div1 <= html.BR()\nbrython_div1 <= "4. " + html.A("41223131", href="https://mdecd2025.github.io/hw-41223131/")+ html.A("(repo)", href="https://github.com/mdecd2025/hw-41223131")\nbrython_div1 <= html.BR()\nbrython_div1 <= "5. " + html.A("41223134", href="https://mdecd2025.github.io/hw-41223134/")+ html.A("(repo)", href="https://github.com/mdecd2025/hw-41223134")\nbrython_div1 <= html.BR()\nbrython_div1 <= "6. " + html.A("41223136", href="https://mdecd2025.github.io/hw-41223136/")+ html.A("(repo)", href="https://github.com/mdecd2025/hw-41223136")\nbrython_div1 <= html.BR()\nbrython_div1 <= "7. " + html.A("41223158", href="https://mdecd2025.github.io/hw-41223158/")+ html.A("(repo)", href="https://github.com/mdecd2025/hw-41223158")\n \n', 'tags': '', 'url': 'w1.html'}, {'title': 'w3', 'text': '列出各班未納入分組名單的名單 \n 2a未加入團隊學員 \n 列出2a還未納入的學員名單 \n', 'tags': '', 'url': 'w3.html'}, {'title': 'w4', 'text': 'putty的使用方法、fossil的操作方式 \n 操作影片： \n \n fossil的操作過程可以到 老師的頁面 觀看 \n 已知目前學員的作業倉儲無法在 IPv6 位址設定時正確運作，必須下載\xa0 cmsimde_w4.7z ， 解開壓縮檔案後，替換倉儲中的 cmsimde 目錄 \n 利用IPV6設定網路 \n 以下是操作影片： \n \n', 'tags': '', 'url': 'w4.html'}, {'title': 'w5', 'text': 'webots的介紹和更改wscite資料夾和webots使用方式. \n', 'tags': '', 'url': 'w5.html'}, {'title': 'webots詳細說明', 'text': 'Q1：什麼是Webots? \n Webots是一款專業的移動機器人模擬軟件，提供了3D虛擬環境，支持物理屬性設計，並且可創建不同類型的機器人(輪式、腿式、飛行)，並添加傳感器和執行器。支持單獨編程機器人以實現特定行為，提供大量模型和示例。模擬成功後，可以將程序轉移至真實的機器人，支持擴展新接口。 \n Q2：我可以用Webots做什麼? \n 應用領域：適用在移動機器人原型設計、運動研究、多代理系統、適應行為研究。 \n 行業範圍：涵蓋學術、汽車、航空、吸塵器、玩具等行業。 \n 教育用途：支持機器人學和編程教學（C/C++/Java/Python） \n 競賽：可用於機器人比賽。 \n Q3：要使用Webots，我需要知道什麼? \n \n 程式語言知識 ：需具備 C、C++、Java、Python或MATLAB 的基本知識來撰寫機器人控制器。若不熟悉語言可使用 簡單圖形化程式語言BotStudio編程 (適用於e-puck和Hemisson機器人) \n 3D模型創建：需了解 3D電腦圖形 和 VRML97 描述語言。 \n 程式語言知識 ：需具備 C、C++、Java、Python或MATLAB 的基本知識來撰寫機器人控制器。若不熟悉語言可使用 簡單圖形化程式語言BotStudio編程 (適用於e-puck和Hemisson機器人) \n 3D模型創建：需了解 3D電腦圖形 和 VRML97 描述語言。 \n \n Q4：什麼是世界? \n \n 世界定義：描述3D涵蓋機器人及其環境的所有屬性(如位置、方向、幾何、外觀、物理屬性等) \n 層次結構：物件以層次方式組織，可包含其他物件(輪子、感測器、關節等) \n 功能與限制：(.wbt)不含控制器程示碼，只指定每個機器人所需的控制器名稱。 \n 儲存位置：檔案以".wbt"格式儲存，位於Webots專案的"worlds"子目錄 \n \n Q5：什麼是控制器? \n \n 控制器定義：控制器是用來控制world檔案中機器人的電腦程式 \n 運行機制：模擬開始時，Webots為每個機器人啟動獨立的控制進程，多個機器人可共用同一程式碼，但每個機器人有獨立進程。 \n 儲存位置：控制器檔案儲存在專案的"controllers"子目錄 \n \n 這是Webots中控制器的 核心概念 ， 強調其獨立性與語言支援的多樣性 。 \n Q6：什麼是監督控制器? \n \n 監督控制器定義：當機器人的 supervisor欄位設為TURE ，控制器成為監督控制器。能執行人類操作員的任務，而非真實機器人能完成的動作。 \n 特權操作：與一般控制器不同，監督控制器擁有特權功能，包括模擬控制，如隨機移動機器人、錄製模擬影片等。 \n \n', 'tags': '', 'url': 'webots詳細說明.html'}, {'title': 'w6', 'text': '要啟動webots在可攜裡面輸入 webotsw 就可以開啟軟體，前提是要檔案內要 Webots_2025a_web.7z 才可以開啟，並放在data頁面，如果是舊版可攜套件 也可在.bat啟動編碼中自行設定加入 \n REM for Webots\nset PYTHON_PATH=%Disk%:\\Python313\n  \nREM for webots\nset  path_webots=%Disk%:\\Webots_2025a\\msys64\\mingw64\\bin;%Disk%:\\Webots_2025a\\msys64\\usr\\bin\n  \npath=%Disk%:;%path_python%;%path_git%;%path_copsim%;%path_msys2%;%path_miketex%;%path_flutter%;%path_node%;%path_tcc%;%path_postgresql%;%path_range%;%path_lua%;%path_core%;%path_putty%;%path_vscode%;%RUST_PATH%;%path_erlang%;%path_nodejs%;%path_haskell%;%path_scite%;%path_xsltproc%;%path_gnuplot%;%path_openssl%;%path_poppler%;%path_webots%;%path_blender%;%path%; \n 在開啟webots時系統會有跳出警告防火牆，其中一定要選擇允許，否則防火牆會擋 \n', 'tags': '', 'url': 'w6.html'}, {'title': 'w7', 'text': '因連假沒有上課，將當週的上課內容整理到此頁 \n slvs檔案： basket_ball_shooter.7z \n 繪製投球機零件影片： \n \n 投球機組合影片： \n \n 完整照片： \n \n \n', 'tags': '', 'url': 'w7.html'}, {'title': 'w8', 'text': '複習webots \xa0 SolidReference \xa0節點的用法說明，用在 Joint 節點的 endPoint 欄位中，用來指向一個現有的 Solid 或靜態環境  <static environment> 。通過這種方式，可以閉合機械迴圈。 \n 當指向一個 Solid 時，唯一的限制是 Solid 和 Joint 必須是某個共同上層 Solid 的下層。 \n 意思即是指 SolidReference 是一個引用類型，允許在 Joint 節點的 endPoint 欄位中指定某個目標。 \n', 'tags': '', 'url': 'w8.html'}, {'title': 'w9', 'text': '本週統整先前所完成的內容，並拍成影片，自評期望成績並填寫表單。 \n 前往 這裡 可以看到自己的期中期望成績、心得 \n', 'tags': '', 'url': 'w9.html'}, {'title': 'w10', 'text': '已知Webots2025a有bug，無法使用 Transform 節點和閃退的問題 ，因此可以下載 Webots2023b 版本。 \n 若想要擁有2025a的版本和2023b的版本可以在編輯器內將2025a的文字更改為2023b，並另存新檔即可。 \n \n', 'tags': '', 'url': 'w10.html'}, {'title': 'w11', 'text': 'webots小組協同模擬及 fourbar_box複習 \n', 'tags': '', 'url': 'w11.html'}, {'title': 'w12', 'text': '本週開始需依照team上，在規定時間完成對應的HW、Exam等網頁內容，並在規定時間內完成表單填寫。 \n', 'tags': '', 'url': 'w12.html'}, {'title': 'Tutorial', 'text': '', 'tags': '', 'url': 'Tutorial.html'}, {'title': 'Tutorial1', 'text': '練習webots使用方法， 熟悉 Webots 的使用者介面與基本概念 \n 操作影片： \n \n', 'tags': '', 'url': 'Tutorial1.html'}, {'title': 'Tutorial2', 'text': '引導課程2：修改環境 \n \n 學習修改地板： \n \n 內定的 RectangleArena PROTO 定義了一個簡單的地板，固定在靜態環境中，沒有物理節點，四周則被牆壁包圍。Webots 物件庫中還有其他預製的地板。我們現在將刪除 RectangleArena 節點，並添加一個簡單的地板，在場景樹視圖當中選擇並展開Floor。 修改size字段其調整為1mx1m。 \n \xa0\xa0\xa0\xa0\xa0\xa0 2.了解Solid節點的應用： \n Solid  節點代表剛體，即可以忽略變形的物體。剛體中任意兩點之間的距離無論外力如何作用，都保持恆定。例如桌子、機器人手指骨節或輪子都是剛體。軟體和關節物體不是剛體。例如繩子、輪胎、海綿或關節機器人手臂都不是剛體。然而，一個關節實體可以被分解成若干剛體。 \n \xa0\xa0\xa0\xa0\xa0\xa0 3.DEF-USE機制： \n DEF-USE 機制允許在一個地方定義一個節點，並在場景樹的其他地方重用該定義。這對於避免在世界文件中重複相同的節點非常有用。此外，它還允許用戶同時修改多個對象。其工作原理如下：首先使用 DEF 字符串標記一個節點。然後可以使用 USE 關鍵字在其他地方重用該節點的副本。只有 DEF 節點的字段可以編輯，USE 節點的字段繼承自 DEF 節點，無法更改。此機制依賴於世界文件中節點的順序。DEF 節點應在任何相應的 USE 節點之前定義。 \n 以下是影片： \n \n 因為後續軟體跳掉下面是後續結果： \n \n', 'tags': '', 'url': 'Tutorial2.html'}, {'title': 'task', 'text': '', 'tags': '', 'url': 'task.html'}, {'title': 'task1', 'text': '以下將要利用程式方法列出學員的作業倉儲與網頁連結, 以及各分組的倉儲及網站連結 \n 2a分組網站與倉儲 \n 2a尚未加入的成員 \n 上列程式已經給出當時已經參與分組的學員 Github 帳號，因此只需要從\xa0 https://mde.tw/list/2a.txt \xa0讀取學員的學號與 Github 帳號，並且在  for 迴圈 中，逐一用學員的 Github 帳號 相對於各班已經參與分組的學員  Github 帳號，並且列出特定學員的 Github 帳號不在前述已經參與分組的學員帳號數列中，即可 列出截至當時尚未那組的學員學號 。 \n # 甲班學員資料處理\nurl = "https://mde.tw/list/2a.txt"\ndata = open(url).readlines()\nall_stud = data[1:]\na_all_members = [\'41223154\', \'41271125\', \'41271158\', \'41271146\', \'41271131\', \'CYG41223103\', \'41223102\', \'41023128\', \'41023137\', \'41223137\', \'41223157\', \'41223156\', \'otakuyoyo\', \'41223141\', \'41223113\', \'kim41223114\', \'joeisme1208\', \'41223116\', \'41223144\', \'41223140\', \'41223143\', \'41223138\', \'41223134\', \'41223136\', \'zhe41223118\', \'Spirit0224\', \'yuhao-08\', \'41223158\', \'Ren911308\', \'41223150\', \'Manto8\', \'CYA41223106\', \'yan21ed\', \'Lin41223107\', \'41223133\', \'hong41223129\', \'41223110\', \'41223147\', \'Linjiahong41223125\', \'CHN41223132\', \'Yu-Fang-Hong\', \'41023111\', \'yckaooooo\', \'kolas911205\', \'41023105\', \'40932134\', \'41223104\', \'yan41223101\', \'41223105\', \'41223153\', \'41223120\', \'41223152\', \'G8People\', \'WSE41223112\', \'41223146\', \'41223119\']\n   \n# 顯示甲班標題\nprint("甲班:")\nfor i in all_stud:\n    drop_n = i.rstrip("\\n")\n    stud = drop_n.split("\\t")\n    stud_num = stud[0]\n    stud_github = stud[1]\n    if stud_github not in a_all_members:\n        print(stud_num) \n \n', 'tags': '', 'url': 'task1.html'}, {'title': 'task2', 'text': 'ssh協定執行作業倉儲的推送 \n 操作過程影片： \n \n 後方遺漏後續操作，以下補充說明： \n 匯出之後在可攜輸入 git clone --recurse-submodules\xa0mailto:git@(.ppk名稱):(倉儲帳號)/(倉儲分支名稱).git \n 再cms即可！ \n \n', 'tags': '', 'url': 'task2.html'}, {'title': 'task3', 'text': '繪圖檔案： 四連桿零件檔.7z \n 四連桿零件1~4繪圖過程： \n \n 四連桿零件5~7繪圖過程： \n \n 四連桿組合： \n \n', 'tags': '', 'url': 'task3.html'}, {'title': 'Homework', 'text': '作業 (30%) \n HW1 (5%):  建立由 Box 組成的平面四連桿機構 Webots 模擬場景 \n part1: \n 請各學員在 USB 隨身碟或個人電腦上完成 cd2025 課程所需的可攜系統配置: \n 下載  portable_wcm2025.7z  (330MB, 解開壓縮後 1.4GB) \n Webots_2025a.7z  (1.5 GB, 解開後約為 2.9GB, 可單獨運作) \n Webots_2025a_web.7z  (171 MB, 解開壓縮後約為 1GB, 必須連網運作) \n Blender4.2.7z \n part2: \n 請各學員完成可攜程式系統配置後, 利用 Webots R2025a 中寬度與高度都為 0.1m 的 box 物件建立一個簡單的平面四連桿機構模擬場景. \n base (基座) 長度 1m, link1 長度 0.4m, link2 長度 0.6m, link3 長度 0.9m, 各轉軸均為 HingeJoint, joint1 旋轉速度設定為 1radian/sec. \n part3: \n 模擬場景啟動後, 按下 s 鍵機構開始作動, 按下 p 鍵後機構暫停. \n 參考資料: \n cd2025_hw1_demo.7z \n HW2 (5%):  建立由 CAD 繪製零件組成的平面四連桿機構 Webots 模擬場景 \n 各學員請利用 CAD 系統依據 HW1 的連桿尺寸與運動方式, 配置適當大小的旋轉軸以及基座後, 利用 Webots R2025a 完成一個簡單的平面四連桿機構模擬場景. \n 參考資料: \n fourbar_slvs.7z \n HW3 (20%): 建立 Webots 桌上籃球遊戲機模擬系統 \n 請各分組利用CAD 系統建立一個能在電腦桌 (1600W X 700D X 740H mm) 上運作的投籃機構 ( 參考影片 )後, 導入 Webots R2025a 套件, 建立一個能由使用者透過鍵盤按鍵操作, 且具備計分板的籃球遊戲機模擬系統. \n 參考資料: \n 參考資料: \n fourbar_ball_throwing_linkage.slvs \n sixbar_ball_throwing_linkage.slvs \n \n', 'tags': '', 'url': 'Homework.html'}, {'title': 'HW1', 'text': 'HW1 (5%):  建立由 Box 組成的平面四連桿機構 Webots 模擬場景 \n 操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 HW1 - 學員學號 \n 題目要求尺寸： 利用 box 幾何外形節點建立平面四連桿機構的模擬場景，要求地面 固定桿長度 1m ， 寬高各為 0.1m ， 第一桿長度 0.4m ， 第二桿長度 0.6m ， 第三桿長度 0.9m 。 \n 檔案： HW1-41223136.7z \n 第一部分：1~2連桿的影片 \n \n 第二部分：2~3連桿的影片 \n \n 第三部分：3~4連桿的影片 \n \n 第四部份：4~1連桿的影片 \n \n 後續須將馬達移除，只留一顆，並新增特殊條件(static environment)。 \n 心得 ：因為是初次操作webots，所以有點難上手，一不小心就會漏掉一個部分，就要重新檢查，連接joint~link的節點要很清楚是哪個桿件指向於到哪個，自己也要了解節點的位置和旋轉的rad方向，位置錯誤就有可能無法轉動等等 。 \n \n', 'tags': '', 'url': 'HW1.html'}, {'title': 'HW2', 'text': 'HW2 (5%):  建立由 CAD 繪製零件組成的平面四連桿機構 Webots 模擬場景 \n 操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 HW2 - 學員學號 \n \n 將 task3 繪製好的連桿件以程式切割後導入webots組配模擬(若使用舊版的可攜，需安裝 numpy 的套件否則無法執行，在可攜cmd輸入 pip install numpy ，學校網路因為防火牆可能無法下載，切換網路即可。) \n 檔案： HW2-41223136.7z \n  影片： \n \n 因後續閃退補後面過程： \n \n', 'tags': '', 'url': 'HW2.html'}, {'title': 'HW3', 'text': 'HW3 (20%): 建立 Webots 桌上籃球遊戲機模擬系統 \n 操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 HW3 - 學員學號 \n \n 檔案： HW3-41223136.7z \n 影片： \n \n 後來調整角度和速度的影片： \n \n', 'tags': '', 'url': 'HW3.html'}, {'title': 'Midterm', 'text': '本課程所繳交的期中成績為學員自評之學習期望成績. \n 期中考週的自評期望成績繳交流程: \n \n 整理先前所完成的各週的進度、作業網頁內容以及心得 \n 拍攝期中自評影片, 上傳至 Youtube 後, 以" 國立虎尾科技大學 - 機械設計工程系 - cd2025 期中自評- 學員學號 "為影片標題後嵌入本頁面中 \n 回填期中自評表單 \n 上傳學員期中成績 \n \n 各週進度:可以從 這裡 來看各週的進度 \n 各週網頁內容: \n 第一週學習Python版本更新、列出各組的倉儲和網站 \n 第三週列出尚未加入分組的學員 \n 第四週ssh協定執行倉儲 \n 第五週學習webots概念 \n 第六週webots使用方法 \n 第七週利用solvespace繪製投籃機 \n 第八週複習webots節點使用方法 \n 期中心得:這學期的內容非常困難，我覺得最困難的地方是webots的使用，webots介面對我來說非常複雜，需要時間消化，雖然官網有教學，但也是要一步一步筆記下來才能了解webots的真正意涵，最主要是自己本身英文問題，有些單字甚至都沒看過，就需要一個一個翻譯了解其中意涵。 \n 期中自評影片: \n \n', 'tags': '', 'url': 'Midterm.html'}, {'title': 'Exam', 'text': 'Exam1 (10%): 建立 Webots 基本物件模擬場景 \n 各學員利用 Webots R2025a 套件中的 Shape 物件, 隨堂建立指定的機電系統模擬場景, 並利用 Python 程式進行互動控制. \n Exam2 (10%): 利用 CAD 零組件建立模擬場景\xa0 \n 各學員利用 CAD (Solvespace 與 NX2312), 隨堂建立指定的系統模型零組件後, 導入 Webots R2025a 後, 建立機電系統模擬場景, 並利用 Python 程式進行互動控制. \n Exam3 (20%): Webots 機電模擬場景的協同設計 \n 各分組利用 CAD (Solvespace 與 NX2312), 隨堂建立指定的系統模型零組件後, 導入 Webots R2025a 後, 建立機電系統模擬場景, 並利用 Python 程式進行互動控制. 過程中各學員必須採同步協同模式, 維護從 Github Classroom 取得的分組協同倉儲以及網站. \n 協同分組方式: \n \n 分配學員負責利用 Solvespace 建立系統零組件, 過程中必須將所建構之零組件檔案與繪圖過程影片上傳至分組網頁. \n 分配學員負責利用 NX2312 建立系統零組件, 過程中必須將所建構之零組件檔案與繪圖過程影片上傳至分組網頁. \n 分配學員負責利用 Webots 建立機電系統模擬場景, 並利用 Python 程式進行控制, 過程中必須將建構過程拍成帶有說明字幕的影片上傳至分組網頁. \n \n', 'tags': '', 'url': 'Exam.html'}, {'title': 'Exam1', 'text': 'Exam1 (10%): 建立 Webots 基本物件模擬場景 \n \n 題目： \n 其中紅色連桿為主動旋轉, 其旋轉速度設為 1.0 rad/s, 紅色連桿長度為 0.4m, 綠色連桿長度為 0.6m (短桿長度為 0.3m 基座位於長桿中央且與基座長桿重疊, ), 藍色連桿長度為 0.9m, 紅色連桿與藍色連桿距離則為 1m. \n 請學員將考試操作流程紀錄於作業網站中的 Exam1 頁面中, 並完成下列要求: \n \n 請詳細說明各連桿的製作流程, 利用 Solvespace 繪製當紅色連桿旋轉角度為個人學號最後兩碼時 (單位為 degree) 的線架構圖, 並將此角度作為四連桿的起始旋轉角度. \n 完成後, 請以" 國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam1 - 學員學號 " 作為操作影片標題, 上傳至 Youtube 後在指定時段內回傳至指定表單. 並在個人作業倉儲中以 Exam1 頁面紀錄相關過程與心得. \n \n 檔案： 41223136-Exam1.7z \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0  41223136-Exam1-1.7z \n 影片： \n \n 以下是利用HW1製作Exam1的過程(有利用transform的方法)： \n \n 心得：經過HW1的練習，熟悉了box的用法，題目也說明了可以用solvespace事先繪製好零件之後，再利用程式切割配合blender就不用像HW1一樣要一個一個建立桿件，在後面提起了transform這個用法，他可以任意移動、旋轉，但pose這個方法也是可以的，他們差在transform可以任意移動而pose是一次指定所有物件的位置和姿態，學習到很多方法。 \n', 'tags': '', 'url': 'Exam1.html'}, {'title': 'Exam2', 'text': 'Exam2 (10%): 利用 CAD 零組件建立模擬場景 \n 操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam2 - 學員學號 \n \n 題目： \n 其中左側最短桿為主動旋轉, 其旋轉速度設為 1.0 rad/s, 最短桿的長度, 請依照個人學號的最後兩碼作為依據, 設為 1.xx m, 其中 xx 為 人學號的最後兩碼, 其餘各桿長度與固定軸間的距離可自行訂定, 惟 主動桿的起始旋轉角度 angle, 也請以個人學號的最後兩碼作為依據, 單位為 degree . \n 請學員將考試操作流程紀錄於作業網站中的 Exam2 頁面中, 並完成下列要求: \n \n 請詳細說明各連桿的製作流程, 其中包括 CAD 繪製與 Webots 模擬場景的設定與操作流程. \n 完成後, 請以" 國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam2 - 學員學號 " 作為操作影片標題, 上傳至 Youtube 後在指定時段內回傳至指定表單. 並在個人作業倉儲中以 Exam2 頁面紀錄相關過程與心得. \n \n 檔案： 41223136-Exam2.7z \n 影片： \n \n 心得：從HW2和HW3的練習，做Exam2的考試就覺得簡單許多，了解角度和位置的用法就會非常簡單，但自己也要練習很多次才會了解webots真正的使用方法，有mesh的作法真的會比較簡單許多。 \n', 'tags': '', 'url': 'Exam2.html'}, {'title': 'Exam3', 'text': 'Exam3 (20%): Webots 機電模擬場景的協同設計 \n \n 題目一：請每位學員利用在\xa0 https://mde.tw/cd2025/content/IPv6.html \xa0中所分配的個人 IPv6 網址, 以 webotsw --stream 啟動個人所完成的 HW1 模擬系統. 並在其餘組員的電腦上, 以瀏覽器檢視啟動串流學員伺服器上的機構模擬. 完成後請各學員將操作與設定說明過程拍成影片, 上傳至 Youtube, 影片標題:\xa0 " 國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam3-1 - 學員學號 ". \n 檔案： 41223136-Exam3-1.7z \n 影片： \n \n 完整影片可以到 41223118 查看客戶端進行的方式 \n 以下是41223118作為伺服器 我這邊作為客戶端之過程影片： \n \n \n 題目二： 請每位學員利用\xa0 three_digit_counter.7z \xa0中的七段顯示器進行修改,\xa0以 webotsw --stream 啟動後, 可在其餘組員的電腦中, 透過瀏覽器檢視參與協同組員 Webots 中所展示的 學員學號 .\xa0完成後請各學員將操作與設定說明過程拍成影片, 上傳至 Youtube, 影片標題:\xa0" 國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam3-2 - 學員學號 ". \n 檔案： 41223136-Exam3-2.7z \n 影片： \n \n 完整影片可以到 41223118 查看客戶端進行方式 \n 以下是41223118作為伺服器端 我作為客戶端的過程影片： \n \n \n 題目三： 請各組利用\xa0 youbot_cart_w10_websocket.7z \xa0中的 Youbot 底座平台, 由各組組長以 webotsw --stream 啟動後,\xa0可在其餘組員的電腦中, 透過 Websocket 客戶端程式控制平台車的前進、後退與左右轉.\xa0完成後請各學員將操作與設定說明過程拍成影片, 上傳至 Youtube, 影片標題:\xa0" 國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam3-3 - 學員學號 ". \n 檔案： 41223136-Exam3-3.7z \n 影片： \n \n 可以到 41223118 查看伺服器操作過程 \n 心得：跟41223118一起完成Exam3的部分，在一開始做Exam3-1時，完全沒有頭緒，怎麼試都是錯誤沒辦法動煩惱非常久，在經過幾小時的奮戰終於做出來了，我們先看老師的檔案去問AI解釋每一段的意思，之後再改條件內容，經過我們的努力就做出來了，之後Exam3-2跟Exam3-3的部分就會比較簡單了，一點通了，後面做起來就會比較順利。 \n \n Exam3影片： \n \n', 'tags': '', 'url': 'Exam3.html'}, {'title': 'Final', 'text': '期末協同專案執行過程影片、簡報與 PDf 報告檔案 (六人一組) (30%) \n 題目:  Webots 動態投籃模擬系統的協同設計 \n 說明:  \n 籃框架被配置在一定範圍內, 可隨機慢速前進、後退及左右擺動, 投籃機構系統帶有一定數量的籃球, 被配置在可自由移動的輪車上. \n 操作者可利用鍵盤特定按鍵控制投籃輪車的移動並發射投籃, 每投出一球後系統透過記分板進行計分, 並由送球機構進行補球或移動輪車取球, 遊戲可進行至全部數量籃球投完為止. \n 請將期末協同專案執行過程、內容與心得, 製作成影片，配合字幕上傳至 Youtube 後嵌入各階段的期末報告頁面中. \n 影片標題:  國立虎尾科技大學 - 機械設計工程系 - cd2025 期末報告 - 學員學號 - 各階段影片主題 \n', 'tags': '', 'url': 'Final.html'}, {'title': 'Brython', 'text': '1 add to 100 \n  導入 brython 程式庫  \n \n \n \n \n  啟動 Brython  \n \n \n \n  導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n \n \n \n  add 1 to 100 開始  \n \n \n  add 1 to 100 結束 \n  editor1 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor1 結束   ##########################################  \n 從 1 累加到 100 part2: \n 1 add to 100 cango_three_gears BSnake AI Tetris \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  add 1 to 100 part2 開始  \n \n \n  add 1 to 100 part2 結束 \n  editor2 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor2 結束  \n \n \n', 'tags': '', 'url': 'Brython.html'}]};